@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
@using ApplicationCore.DapperEntity
@model CustomerProductView

<h1>Order</h1>
<form class="form mt-3" method="post">
    <div class="mb-3">
        <div class="mb-3">
            <label for="Customer" class="form-label">Select Customer</label>
            <select name="CustomerId" id="customerDropdown" class="form-control" onchange="updateCustomer()">
                <option value="" disabled selected>Select Customer</option>
                @foreach (var customer in Model.Customers)
                {
                //               <option value="@product.Id" data-quantity="@product.quantity">@product.Name</option>
                    <option value="@customer.Id" data-Name="@customer.Name" data-Billing="@customer.BillingAddress" data-Shipping="@customer.ShippingAddress">@customer.Name</option>
                }
            </select>
        </div>


        <label class="form-label" hidden>CustomerId</label>
        <input type="text" id="CustomerId" name="CustomerId" class="form-control" value="@Model.CustomerId" hidden />
    </div>
    <div class="mb-3">
        <label for="CustomerName" class="form-label">Customer Name</label>
        <input type="text" id="CustomerName" name="CustomerName" class="form-control" disabled />
    </div>
    <div class="mb-3">
        <label for="CustomerBillingAddress" class="form-label">Billing Address</label>
        <input type="text" id="CustomerBillingAddress" name="CustomerBillingAddress" disabled class="form-control" />
    </div>
    <div class="mb-3">
        <label for="CustomerShippingAddress" class="form-label">Shipping Address</label>
        <input type="text" id="CustomerShippingAddress" name="CustomerShippingAddress" class="form-control" placeholder="" disabled />
    </div>
    <div class="mb-3">
        <label for="Category" class="form-label">Categories</label>
        <select name="CategoryId" id="CategoryDropdown" class="form-control" required onchange="updateProductList()">
            <option value="" disabled selected>Select category</option>
            @foreach (var category in Model.Categories)
            {
                <option value="@category.Id">@category.Name</option>
            }
        </select>
    </div>
    <div class="mb-3">
        <label for="Products" class="form-label">Products</label>
        <select name="ProductId" id="productDropdown" class="form-control" onchange="updatePrice()">
            <option value="" disabled selected>Select Product</option>
            @* @foreach (var product in Model.Products)
            {
            //               <option value="@product.Id" data-quantity="@product.quantity">@product.Name</option>
                <option value="@product.Id" data-quantity="@product.quantity" data-price="@product.Price">@product.Name</option>
            } *@
        </select>
    </div>
   
    <div class="mb-3">
        <label for="ProductQuantity" class="form-label">Price Per Piece <span style="color: red;">*</span></label>
        <input type="text" id="ProductPrice" readonly name="ProductPrice" class="form-control" min="1" placeholder="" required />
    </div>
    <div class="mb-3">
        <label for="ProductQuantity" class="form-label">Quantity <span style="color: red;">*</span></label>
        <input type="number" id="Quantity" name="ProductQuantity" class="form-control" min="1" onchange="Updatetotal()" placeholder="" required />
    </div>
    <div class="mb-3">
        <label for="Price" class="form-label"> Total Price </label>
        <input type="text" id="TotalPrice" readonly name="TotalPrice" class="form-control" placeholder="" />
    </div>
    <div class="mb-3">
        <label for="Price" class="form-label" hidden>Price</label>
        <input type="text" id="TotalProductPrice" readonly name="TotalProductPrice" class="form-control" placeholder="" hidden />
    </div>
    <div class="mb-3">
        <label for="ProductQuantity" class="form-label">Discount </label>
        <input type="number" id="Discount" name="Discount" max="100" onchange="Updatediscount()" class="form-control" min="1" placeholder="" />
    </div>
    <div class="mb-3">                   
        <label for="ProductQuantity" class="form-label">Amount to be Paid </label>
        <input type="number" id="DiscountedPrice" readonly name="TotalAmount" class="form-control" min="1" placeholder="" />
    </div>

    <button type="submit" class="btn btn-primary">Save</button>
</form>
<div id="dynamictable" class="table-responsive">
    <table class="table table-bordered" id="orderstable">
        <thead>
            <tr>
                <th class="text-center">
                    Id
                </th>
                <th class="text-center">
                    Name
                </th>
            </tr>
        </thead>
        <tbody id="tbody">
        </tbody>
    </table>
</div>
@section scripts {
    <script>


        function updateCustomer() {
            debugger
            var customerdropdown = document.getElementById("customerDropdown");
            var customername = document.getElementById("CustomerName");
            var customerBillingAddress = document.getElementById("CustomerBillingAddress");
            var customerShippingAddress = document.getElementById("CustomerShippingAddress");

            var selectedOption = customerdropdown.options[customerdropdown.selectedIndex];
            var name = selectedOption.getAttribute("data-Name");
            var shipping = selectedOption.getAttribute("data-Shipping");
            var billing = selectedOption.getAttribute("data-Billing");
            customername.value = name;
            customerBillingAddress.value = billing;
            customerShippingAddress.value = shipping;

        }


        function updatePrice() { debugger
            var dropdown = document.getElementById("productDropdown");
            var priceInput = document.getElementById("ProductPrice");

            var selectedOption = dropdown.options[dropdown.selectedIndex];
            var maxQuantity = selectedOption.getAttribute("data-quantity");

            var price = selectedOption.getAttribute("data-price");

            priceInput.value = parseInt(price);
            $("#Quantity").val("");
        }


        function Updatetotal() {
            var quantityvalue = document.getElementById("Quantity");
            var priceInput = document.getElementById("ProductPrice");
            var priceTotal = document.getElementById("TotalPrice");

            var pricerpoductTotal = document.getElementById("TotalProductPrice");

            var quantity = parseInt(quantityvalue.value) || 0;
            var price = parseInt(priceInput.value) || 0;
            var total = quantity * price;
            priceTotal.value = total;
            pricerpoductTotal.value = total;
        }
        function Updatediscount() {
            debugger
            var Discount = document.getElementById("Discount");
            var priceTotal = document.getElementById("TotalPrice");
            var discounted = document.getElementById("DiscountedPrice");
            var discountvalue = parseInt(Discount.value) || 0;
            var price = parseInt(priceTotal.value) || 0;
            var discountgiven = (price * discountvalue) / 100;
            var total = price - discountgiven;
            discounted.value = parseInt(total);

        }


        function updateProductList() {
            debugger;
            var s = document.getElementById("CategoryDropdown").value;
            $.ajax({
                type: "GET",
                url: "/Orders/ProductByCategory",
                data: { Catid: s },
                dataType: "view",
                contentType: "application/json; charset=utf-8",
                success: function (response) {
                    debugger;
                    console.log(response);
                    var productDropdown = document.getElementById("productDropdown");
                    productDropdown.innerHTML = '<option value="" disabled selected>Select Product</option>';

                    response.forEach(function (product) {
                        debugger;
                        var option = document.createElement("option");
                        option.value = product.id;
                        option.text = product.name;
                        option.setAttribute('data-quantity', product.quantity);
                        option.setAttribute('data-price', product.price);

                        productDropdown.add(option);
                    });
                },
                error: function (xhr, status, error) {
                    console.error(error);
                }
            });
        }

    </script>
}