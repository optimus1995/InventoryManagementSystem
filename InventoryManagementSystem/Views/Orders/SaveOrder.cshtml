@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
@using ApplicationCore.DapperEntity
@model CustomerProductView

<h1>Order</h1>
<form class="form mt-3" method="post" onsubmit="AddProductstoDb()">
    <div class="mb-3">
        <div class="mb-3">
            <label for="Customer" class="form-label">Select Customer</label>
            <select name="CustomerId" id="customerDropdown" class="form-control" onchange="updateCustomer()">
                <option value="" disabled selected>Select Customer</option>
                @foreach (var customer in Model.Customers)
                {
                //               <option value="@product.Id" data-quantity="@product.quantity">@product.Name</option>
                    <option value="@customer.Id" data-Name="@customer.Name" data-Billing="@customer.BillingAddress" data-Shipping="@customer.ShippingAddress">@customer.Name</option>
                }
            </select>
        </div>


        <label class="form-label" hidden>CustomerId</label>
        <input type="text" id="CustomerId" name="CustomerId" class="form-control" value="@Model.CustomerId" hidden />
    </div>
    <div class="mb-3">
        <label for="CustomerName" class="form-label">Customer Name</label>
        <input type="text" id="CustomerName" name="CustomerName" class="form-control" disabled />
    </div>
    <div class="mb-3">
        <label for="CustomerBillingAddress" class="form-label">Billing Address</label>
        <input type="text" id="CustomerBillingAddress" name="CustomerBillingAddress" disabled class="form-control" />
    </div>
    <div class="mb-3">
        <label for="CustomerShippingAddress" class="form-label">Shipping Address</label>
        <input type="text" id="CustomerShippingAddress" name="CustomerShippingAddress" class="form-control" placeholder="" disabled />
    </div>
    <div class="mb-3">
        <label for="Category" class="form-label">Categories</label>
        <select name="CategoryId" id="CategoryDropdown" class="form-control" required onchange="updateProductList()">
            <option value="" disabled selected>Select category</option>
            @foreach (var category in Model.Categories)
            {
                <option value="@category.Id">@category.Name</option>
            }
        </select>
    </div>
    <div class="mb-3">
        <label for="Products" class="form-label">Products</label>
        <select name="ProductId" id="productDropdown" class="form-control" onchange="updatePrice()">
            <option value="" disabled selected>Select Product</option>
            @* @foreach (var product in Model.Products)
            {
            //               <option value="@product.Id" data-quantity="@product.quantity">@product.Name</option>
                <option value="@product.Id" data-quantity="@product.quantity" data-price="@product.Price">@product.Name</option>
            } *@
        </select>
    </div>
   
    <div class="mb-3">
        <label for="ProductQuantity" class="form-label">Price Per Piece <span style="color: red;">*</span></label>
        <input type="text" id="ProductPrice" readonly name="ProductPrice" class="form-control" min="1" placeholder="" required />
    </div>
    <div class="mb-3">
        <label for="ProductQuantity" class="form-label">Quantity <span style="color: red;">*</span></label>
        <input type="number" id="Quantity" name="ProductQuantity" class="form-control" min="1" onchange="Updatetotal()" placeholder="" required />
    </div>
    <div class="mb-3">
        <label for="Price" class="form-label"> Total Price </label>
        <input type="text" id="TotalPrice" readonly name="TotalPrice" class="form-control" placeholder="" />
    </div>
    <div class="mb-3">
        <label for="Price" class="form-label" hidden>Price</label>
        <input type="text" id="TotalProductPrice" readonly name="TotalProductPrice" class="form-control" placeholder="" hidden />
    </div>
    <div class="mb-3">
        <label for="ProductQuantity" class="form-label">Discount </label>
        <input type="number" id="Discount" name="Discount" max="100" onchange="Updatediscount()" class="form-control" min="1" placeholder="" />
    </div>
    <div class="mb-3">                   
        <label for="ProductQuantity" class="form-label">Amount to be Paid </label>
        <input type="number" id="DiscountedPrice" readonly name="TotalAmount" class="form-control" min="1" placeholder="" />
    </div>

    <button type="button" class="btn btn-primary"onclick="AddDetailRecord()" >Add Record</button>
    <button type="submit" id="Saveorderbtn" class="btn btn-primary">Save</button>
</form>
<div id="dynamictable" class="table-responsive">
    <table class="table table-bordered" id="orderstable">
        <thead>
            <tr>
                <th class="text-center" >  ProductId    </th>
                <th class="text-center"> Sr #  </th>

                <th class="text-center"> Product Name  </th>
                <th class="text-center"> Price Per Piece  </th>

                <th class="text-center">  Quantity    </th>
                <th class="text-center"> TotalPrice  </th>
            </tr>
        </thead>
        <tbody id="tbody">
        </tbody>
    </table>
</div>
@section scripts {
    <script>

        let totalamount = 0;
        function updateCustomer() {
            var customerdropdown = document.getElementById("customerDropdown");
            var customername = document.getElementById("CustomerName");
            var customerBillingAddress = document.getElementById("CustomerBillingAddress");
            var customerShippingAddress = document.getElementById("CustomerShippingAddress");

            var selectedOption = customerdropdown.options[customerdropdown.selectedIndex];
            var name = selectedOption.getAttribute("data-Name");
            var shipping = selectedOption.getAttribute("data-Shipping");
            var billing = selectedOption.getAttribute("data-Billing");
            customername.value = name;
            customerBillingAddress.value = billing;
            customerShippingAddress.value = shipping;

        }


        function updatePrice() { 
            var dropdown = document.getElementById("productDropdown");
            var priceInput = document.getElementById("ProductPrice");

            var selectedOption = dropdown.options[dropdown.selectedIndex];
            var maxQuantity = selectedOption.getAttribute("data-quantity");

            var price = selectedOption.getAttribute("data-price");

            priceInput.value = parseInt(price);
            $("#Quantity").val("");
        }


        function Updatetotal() {
            var quantityvalue = document.getElementById("Quantity");
            var priceInput = document.getElementById("ProductPrice");
            var priceTotal = document.getElementById("TotalPrice");

            var pricerpoductTotal = document.getElementById("TotalProductPrice");

            var quantity = parseInt(quantityvalue.value) || 0;
            var price = parseInt(priceInput.value) || 0;
            var total = quantity * price;
            priceTotal.value = total;
            pricerpoductTotal.value = total;
        }
        function Updatediscount() {
            var Discount = document.getElementById("Discount");
            var priceTotal = totalamount;
            var discounted = document.getElementById("DiscountedPrice");
            var discountvalue = parseInt(Discount.value) || 0;
            var price = parseInt(priceTotal) || 0;
            var discountgiven = (price * discountvalue) / 100;
            var total = price - discountgiven;
            discounted.value = parseInt(total);

        }


        function updateProductList() {
            var s = document.getElementById("CategoryDropdown").value;
            $.ajax({
                type: "GET",
                url: "/Orders/ProductByCategory",
                data: { Catid: s },
                dataType: "Json",
                contentType: "application/json; charset=utf-8",
                success: function (response) {
                    console.log(response);
                    var productDropdown = document.getElementById("productDropdown");
                    productDropdown.innerHTML = '<option value="" disabled selected>Select Product</option>';

                    response.forEach(function (product) {
                        var option = document.createElement("option");
                        option.value = product.id;
                        option.text = product.name;
                        option.setAttribute('data-quantity', product.quantity);
                        option.setAttribute('data-price', product.price);

                        productDropdown.add(option);
                    });
                },
                error: function (xhr, status, error) {
                    console.error(error);
                }
            });
        }

        function AddDetailRecord() {
            try {

                let quantity = parseInt($("#Quantity").val(), 10); 
                let totalPriceInput = $("#TotalPrice");

                let dropdown = document.getElementById("productDropdown");
                let selectedOption = dropdown.options[dropdown.selectedIndex];

                let productName = selectedOption.text ;

                let productID = selectedOption.value;
                
                let productPrice = parseFloat(selectedOption.getAttribute("data-price"));

                let total = quantity * productPrice;
                totalPriceInput.val(total);
                let table = $('#orderstable').DataTable();
                let count = table.rows().count() + 1;
                let newRow = "<tr>" +
                    "<td >" + productID + "</td>" +
                    "<td>" + count + "</td>" +
                    "<td>" + productName + "</td>" +
                    "<td>" + productPrice + "</td>" +
                    "<td>" + quantity + "</td>" +
                    "<td>" + total + "</td>" +
                    "</tr>";
                totalamount += total;
                table.row.add($(newRow)).draw(false);
                console.log("Total Amount: " + totalamount);
            } catch (ex) {
                // Handle any errors
                console.log("Error: " + ex.message);
            }
        }

        function AddProductstoDb() {
            debugger;
            $.ajax({
                type: "POST",

                data: AjaxObjCall(),
                url: "/Orders/SaveRecord",
                dataType: "Json",
        //        contentType: "application/json; charset=utf-8",
                success: function (response) { debugger
                    console.log("Success");
                },
                error: function (xhr, status, error) {
                    console.error(error);
                }
            });
        }




        function AjaxObjCall() {debugger

            let dropdown = document.getElementById("customerDropdown");
            let selectedOption1 = dropdown.options[dropdown.selectedIndex];
            let CustomerId = selectedOption1.value;
            let discount = $("#Discount").val();
            let finalprice = $("#DiscountedPrice").val();


            var AjaxObjMaster = {
                "CustomerId": CustomerId,
                "Discount":discount,
                "TotalAmount":finalprice,
                        "TotalPrice": totalamount,
                
                "ListDetails": []
            };


            var tblDetail = $('#orderstable').DataTable();
            var tblRows = tblDetail.rows().data();

            if (tblRows.length > 0) {
                $.each(tblRows, function (index, value) {
                    debugger;
                    var ListDetail = {
                        "ProductId": value[0], 
                        "ProductPrice": value[3],
                        "ProductQuantity": value[4], 
                        "TotalPrice": value[5]
                    };

                    AjaxObjMaster.ListDetails.push(ListDetail);
                });
            }
            debugger
            console.log("Data Sent: ", AjaxObjMaster); 
            return AjaxObjMaster;
        }

    </script>
}