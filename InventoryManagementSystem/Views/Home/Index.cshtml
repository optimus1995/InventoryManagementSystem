@{
    ViewData["Title"] = "Home Page";
}
 @inject Infrastructure.Services.LanguageServices LanguageServices

 <h1 class=" btn-secondary " style="text-align:center">Welcome to Inventory Management System</h1>
@await Component.InvokeAsync("Inventory")

@using Microsoft.AspNetCore.Mvc.Localization

<div class="container-fluid">

    <!-- Page Heading -->
    <h1 class="h3 mb-2 text-gray-800">Charts</h1>
    
    <!-- Content Row -->
    <div class="row">

        <div class="col-xl-8 col-lg-7">

            <!-- Area Chart -->
            <div class="card shadow mb-4 " >
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Area Chart</h6>
                </div>
                <div class="card-body">
                    <div class="chart-area">
                        <canvas id="myAreaChart"></canvas>
                     </div>
                    <hr>
                    Styling for the area chart can be found in the
                    <code>/js/demo/chart-area-demo.js</code> file.
                </div>
            </div>

            <!-- Bar Chart -->
            <div class="card shadow mb-4" hidden>
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Bar Chart</h6>
                </div>
                <div class="card-body">
                    <div class="chart-bar">
                        <canvas id="myBarChart"></canvas>
                    </div>
                    <hr>
                    Styling for the bar chart can be found in the
                    <code>/js/demo/chart-bar-demo.js</code> file.
                </div>
            </div>

        </div>

        <!-- Donut Chart -->
        <div class="col-xl-4 col-lg-5">
            <div class="card shadow mb-4">
                <!-- Card Header - Dropdown -->
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Products</h6>
                </div>
                <!-- Card Body -->
                <div class="card-body">
                    <div class="chart-pie pt-4">
                        <canvas id="myPieChart"></canvas>
                    </div>
                    <hr>
                    <h3>Total Products: <span id="totalProductCount">0</span></h3>
                    
                </div>
            </div>
        </div>
    </div>

</div>

@section Scripts {
<script>
    $(document).ready(function () {
     //   ShowOrders();
        // ShowProductsRecordGraph();
        updateChart();
    })
        function ShowProductsRecordGraph() {debugger

            $.ajax({
                type: "GET",
                url: "/Products/GraphResult",

                dataType: "json",
                success: function (response) {
                    debugger;
                    response.forEach((item, index) => {
                        console.log(`Item ${index + 1}:`, item);
                    });
                    console.log( response);

                    updateChart(response);
                },
                error: function (xhr, status, error) {
                    console.log("Error:", error);
                    console.log("Status:", status);
                    console.log("Response:", xhr.responseText);
                }
            });
        }

        // function updateChart(data) {
        //     debugger;
        //     const categoryNames = data.map(item => item.categoryName);
        //     const productCounts = data.map(item => item.productCount);
          

        //     const ctx = document.getElementById('categoryChart').getContext('2d');

        //     new Chart(ctx, {
        //         type: 'bar',
        //         data: {
        //             labels: categoryNames,
        //             datasets: [{
        //                 label: 'Number of Products per Category',
        //                 data: productCounts,
        //                 backgroundColor: 'rgba(54, 162, 235, 0.2)',
        //                 borderColor: 'rgba(54, 162, 235, 1)',
        //                 borderWidth: 1
        //             }]
        //         },
        //         options: {
        //             scales: {
        //                 y: {
        //                     beginAtZero: true
        //                 }
        //             }
        //         }
        //     });
        // }
        // // Function to fetch data and update the chart
        function updateChart() {
            $.ajax({
                type: "GET",
                url: "/Products/GraphResult",
                dataType: "json",
                success: function (response) {debugger
                    // Extract category names and product counts from the response
                    const categoryNames = response.map(item => item.categoryName);
                    const productCounts = response.map(item => item.productCount);

                    const totalProductCount = productCounts.reduce((acc, count) => acc + count, 0);

                    document.getElementById('totalProductCount').textContent = totalProductCount;

                    // Create or update the Pie chart
                    var ctx = document.getElementById("myPieChart").getContext('2d');

                    if (window.myPieChart) {debugger
                        // If chart already exists, update it
                        window.myPieChart.data.labels = categoryNames;
                        window.myPieChart.data.datasets[0].data = productCounts;
                        window.myPieChart.update();
                    } else {debugger
                        // Create a new chart
                        window.myPieChart = new Chart(ctx, {
                            type: 'doughnut',
                            data: {
                                labels: categoryNames,
                                datasets: [{
                                    data: productCounts,
                                    backgroundColor: ['red', 'black', 'orange'],
                                    hoverBackgroundColor: ['#8B0000', '#A9A9A9', '#FF8C00'],
                                    hoverBorderColor: "rgba(234, 236, 244, 1)" 

                                }],
                            },
                            options: {
                                maintainAspectRatio: false,
                                tooltips: {
                                    backgroundColor: "rgb(255,255,255)",
                                    bodyFontColor: "#858796",
                                    borderColor: '#dddfeb',
                                    borderWidth: 1,
                                    xPadding: 15,
                                    yPadding: 15,
                                    displayColors: false,
                                    caretPadding: 10,
                                },
                                legend: {
                                    display: true // Show legend for better understanding of categories
                                },
                                cutoutPercentage: 80,
                            },
                        });
                    }
                },
                error: function (xhr, status, error) {
                    console.log("Error:", error);
                    console.log("Status:", status);
                    console.log("Response:", xhr.responseText);
                }
            });
        }




        function ShowOrders() {
            $.ajax({
                type: "GET",
                url: "/Orders/GetAll",
                dataType: "json",
                success: function (response) {
                    // Extracting data for the chart
                    const labels = response.map(order => order.month);
                    const data = response.map(order => order.totalPrice);

                    // Updating the chart
                    myLineChart.data.labels = labels;
                    myLineChart.data.datasets[0].data = data;
                    myLineChart.update();
                },
                error: function (xhr, status, error) {
                    console.log("Error:", error);
                    console.log("Status:", status);
                    console.log("Response:", xhr.responseText);
                }
            });
        }

        var ctx = document.getElementById("myAreaChart");
        var myLineChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: [], // Initially empty
                datasets: [{
                    label: "Total Price",
                    lineTension: 0.3,
                    backgroundColor: "rgba(78, 115, 223, 0.05)",
                    borderColor: "rgba(78, 115, 223, 1)",
                    pointRadius: 3,
                    pointBackgroundColor: "rgba(78, 115, 223, 1)",
                    pointBorderColor: "rgba(78, 115, 223, 1)",
                    pointHoverRadius: 3,
                    pointHoverBackgroundColor: "rgba(78, 115, 223, 1)",
                    pointHoverBorderColor: "rgba(78, 115, 223, 1)",
                    pointHitRadius: 10,
                    pointBorderWidth: 2,
                    data: [], // Initially empty
                }],
            },
            options: {
                maintainAspectRatio: false,
                layout: {
                    padding: {
                        left: 10,
                        right: 25,
                        top: 25,
                        bottom: 0
                    }
                },
                scales: {
                    xAxes: [{
                        time: {
                            unit: 'month' // Changed from 'date' to 'month'
                        },
                        gridLines: {
                            display: false,
                            drawBorder: false
                        },
                        ticks: {
                            maxTicksLimit: 12 // Limit to 12 ticks for each month
                        }
                    }],
                    yAxes: [{
                        ticks: {
                            maxTicksLimit: 5,
                            padding: 10,
                            callback: function (value, index, values) {
                                return '$' + number_format(value);
                            }
                        },
                        gridLines: {
                            color: "rgb(234, 236, 244)",
                            zeroLineColor: "rgb(234, 236, 244)",
                            drawBorder: false,
                            borderDash: [2],
                            zeroLineBorderDash: [2]
                        }
                    }],
                },
                legend: {
                    display: false
                },
                tooltips: {
                    backgroundColor: "rgb(255,255,255)",
                    bodyFontColor: "#858796",
                    titleMarginBottom: 10,
                    titleFontColor: '#6e707e',
                    titleFontSize: 14,
                    borderColor: '#dddfeb',
                    borderWidth: 1,
                    xPadding: 15,
                    yPadding: 15,
                    displayColors: false,
                    intersect: false,
                    mode: 'index',
                    caretPadding: 10,
                    callbacks: {
                        label: function (tooltipItem, chart) {
                            var datasetLabel = chart.datasets[tooltipItem.datasetIndex].label || '';
                            return datasetLabel + ': $' + number_format(tooltipItem.yLabel);
                        }
                    }
                }
            }
        });

</script>


}


